# A name for your workflow
name: Build Android APK

# This section defines when the workflow runs.
# It will run on every push to your "main" branch.
on:
  push:
    branches: [ "main" ]

# This section defines the actual tasks to be performed.
jobs:
  build:
    # The type of virtual machine the job will run on
    runs-on: ubuntu-latest

    # This sets a default folder for the commands below.
    # It solves the "gradlew: No such file or directory" error.
    defaults:
      run:
        working-directory: ./your-project-subdirectory  # ⚠️ IMPORTANT: CHANGE THIS

    # These are the sequential steps for the build process.
    steps:
      # 1. Downloads your repository code into the virtual machine
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sets up the Java Development Kit (JDK) required for Android builds
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # 3. Gives the Gradle wrapper script permission to be executed
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. Runs the Gradle command to build a debug version of your APK
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # 5. Takes the generated APK and saves it as a downloadable file
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          # The path to the generated APK file
          path: your-project-subdirectory/app/build/outputs/apk/debug/app-debug.apk # ⚠️ IMPORTANT: CHANGE THIS
